@page "{BallotId:int}"
@model BallotPalette.Pages.Ballots.ResultsModel
@{
    ViewData["Title"] = "Results";
}

<h1>Results for @Model.Ballot.Name</h1>

<div class="row mb-2">

    @foreach (var question in Model.Questions)
    {
        <div class="col-md-4 order-md-1">
            <div class="mb-2">
                <h3>@question.Text</h3>
                <canvas id="@question.Id" style="width:100%;max-width:700px"></canvas>
            </div>
        </div>
    }
</div>

<button id="get_report" class="btn btn-lg btn-block btn-primary" onclick="showReport()">Show report</button>
<div id="report" class="collapse">
    <h3>Report for @Model.Ballot.Name</h3>
    <h4>Status at @Model.time</h4>
    <table class="table">
        @foreach (var question in Model.Questions)
        {
            <tr>
                <th></th>
                @foreach (var option in Model.GetOptionsByQuestion(question.Id))
                {

                    <th>@option.Text</th>
                }
                <th>Total votes</th>
            </tr>
            <tr>
                <td>@question.Text</td>
                @foreach (var option in Model.GetOptionsByQuestion(question.Id))
                {

                    <td>@option.NumVotes votes</td>
                }
                <td>@Model.GetTotalVotes(question.Id) votes</td>
            </tr>
        }
    </table>
</div>

<script src="~/lib/Chart.js/Chart.min.js"></script>
<script type="text/javascript">

    function showReport() {
        var div = document.getElementById('report');
        div.className = div.className == "collapse" ? "btn-block" : "collapse";
    }

    @foreach(var question in Model.Questions)
    {
        <text>
        var context_@question.Id = document.getElementById("@question.Id").getContext('2d');
        var data_@question.Id = {
            datasets: [{
                data: [ @Html.Raw(Model.GetData(question.Id)) ],
                backgroundColor: ['red', 'orange', 'yellow', 'green', 'blue', 'purple'],
            }],
            labels: [
                @Html.Raw(Model.GetLabels(question.Id))
            ]
        };

        const chart_@question.Id = new Chart(context_@question.Id,  {
            type: 'pie',
            data: data_@question.Id,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: '@question.Text'
                    }
                }
            },
        });
        </text>
    }
</script>

